func	int,Factorial
var		int,n(0)
trans	r0,x0
store	n(0),r0
load	r0,n(0)
load	r1,0
equ		r0,r1
cvt		bool,r0
jmpf	0,r0
load	r0,1
trans	y,r0
ret		
lable	0
load	r0,n(0)
load	r1,1
sub		r0,r1
trans	x0,r0
call	Factorial
trans	r0,y
load	r1,n(0)
mul		r0,r1
trans	y,r0
ret		
func	int,Fibonacci
var		int,n(0)
trans	r0,x0
store	n(0),r0
load	r0,n(0)
load	r1,2
lequ	r0,r1
cvt		bool,r0
jmpf	0,r0
load	r0,1
trans	y,r0
ret		
lable	0
load	r0,n(0)
load	r1,1
sub		r0,r1
trans	x0,r0
call	Fibonacci
trans	r0,y
load	r1,n(0)
load	r2,2
sub		r1,r2
trans	x0,r1
push	r0
call	Fibonacci
pop		r0
trans	r1,y
add		r0,r1
trans	y,r0
ret		
func	void,main
var		int,i(0)
load	r0,1
store	i(0),r0
lable	0
load	r0,i(0)
load	r1,10
lequ	r0,r1
cvt		bool,r0
jmpf	1,r0
load	r0," -----xxx----- i"
output	r0
load	r0,i(0)
output	r0
load	r0," -----xxx-----"
output	r0
output	endline
load	r0,"Factorial("
output	r0
load	r0,i(0)
output	r0
load	r0,"):"
output	r0
load	r0,i(0)
trans	x0,r0
call	Factorial
trans	r0,y
output	r0
load	r0," Fibonacci("
output	r0
load	r0,i(0)
output	r0
load	r0,"):"
output	r0
load	r0,i(0)
trans	x0,r0
call	Fibonacci
trans	r0,y
output	r0
output	endline
load	r0,i(0)
load	r1,1
add		r0,r1
store	i(0),r0
jmp		0
lable	1
